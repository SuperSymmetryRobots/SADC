<!-- -->
<launch>

  <arg name="demo" default="seat_car"/>
  <arg name="gazebo_gui" default="True"/>
  <arg name="car_x"    default="-0.5"/>
  <arg name="car_y"    default="2.5"/>
  <arg name="car_yaw"  default="0.0"/>

  <include file="$(find seat_car_gazebo)/launch/seat_car_gazebo.launch">
    <arg name="demo" value="$(arg demo)"/>
    <arg name="gui"  value="$(arg gazebo_gui)"/>
    <arg name="x"    value="$(arg car_x)"/>
    <arg name="y"    value="$(arg car_y)"/>
    <arg name="yaw"  value="$(arg car_yaw)"/>
  </include>

  <include file="$(find seat_car_control)/launch/seat_car_control.launch"/>

  <node name="imu_filter"
        pkg="imu_filter_madgwick"
        type="imu_filter_node"
        output="screen">
    <remap from="/imu/data_raw"
             to="/imu"/>
    <param name="use_mag" value="false"/>
    <param name="gain" value="0.1"/>
    <param name="zeta" value="0.0"/>
    <param name="mag_bias_x" value="0.0"/>
    <param name="mag_bias_y" value="0.0"/>
    <param name="mag_bias_z" value="0.0"/>
    <param name="orientation_stddev" value="0.0"/>
    <param name="world_frame" value="nwu"/>
    <param name="use_magnetic_field_msg" value="false"/>
    <param name="fixed_frame" value="/seat_car/imu"/>
    <param name="publish_tf" value="false"/>
    <param name="reverse_tf" value="false"/>
    <param name="constant_dt" value="0.0"/>
    <param name="publish_debug_topics" value="false"/>
    <param name="stateless" value="false"/>
  </node>

  <param name="road_description" command="$(find xacro)/xacro.py '$(find seat_car_description)/urdf/road_env.xacro'" />

  <!-- Spawn a robot into Gazebo -->
  <node name="spawn_road" pkg="gazebo_ros" type="spawn_model" args="-param road_description -urdf -model road -x 0 -y 0 -z 0.01 -R 0 -P 0 -Y 0 "/>

  <node pkg="odometry" 
        type="odometry_publisher" 
        name="odometry_publisher"
        output="screen">
    <remap from="/motor_control/twist"
             to="/model_car/twist"/>
    <remap from="/model_car/yaw"
             to="/model_car/yaw"/>
  </node>

  <node name="image_proc" 
        pkg="image_proc" 
        type="image_proc" 
        ns="usb_cam" 
        required="true">
  </node>

  <node name="cmvision" 
        pkg="cmvision" 
        type="cmvision" 
        output="screen" 
        required="true">
    <remap from="image" to="usb_cam/image_rect_color" />
    <param name="color_file" value="$(find detect_roof_rectangles)/colors.txt" />
    <param name="mean_shift_on" value="true" />
    <param name="color_radius_pix" value="0" />
    <param name="spatial_radius_pix" value="0" />
    <param name="debug_on" value="false" />
  </node>
  
  <node pkg="detect_roof_rectangles" 
        type="detect" 
        name="detect"
        output="screen"/>

  <node pkg="visual_gps" 
        type="visual_gps_2d_node" 
        name="visual_gps_2d" 
        output="screen"
        args="0 1 2">
    <param name="map_file" value="$(find visual_gps)/config/FEATURE_FILES/map.txt" />
    <param name="camera_file" value="$(find visual_gps)/config/FEATURE_FILES/camera.txt" />
    <param name="start_frame" value="/world" />
    <param name="end_frame" value="/camera"/>
  </node>

  <node pkg="tf" type="static_transform_publisher" name="ftsensor_FRAME" args="0 0 0 0 0 0 /world /Features_markers 500" />

  <node name="rviz"
        pkg="rviz"
        type="rviz"
        args="-d $(find seat_car_description)/config/seat_car.rviz" />

</launch>
